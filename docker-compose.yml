services:
  backend:
    build: ./backend
    volumes:
      - ./backend:/var/www
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-movies}
      - DB_USERNAME=${DB_USERNAME:-movies_user}
      - DB_PASSWORD=${DB_PASSWORD:-movies_password}
    networks:
      - app-network

  nginx_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production-stage
    container_name: nginx_frontend
    ports:
      - "5174:80"
    volumes:
      - ./nginx/nginx.frontend.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network

  nginx_backend:
    image: nginx:stable-alpine
    container_name: nginx_backend
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www:ro
      - ./nginx/nginx.backend.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: ${DB_DATABASE:-movies}
      MYSQL_USER: ${DB_USERNAME:-movies_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-movies_password}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

volumes:
  dbdata:

networks:
  app-network:
    driver: bridge